name: Create Release and Zip Asset

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Update system.json version and URLs
        run: |
          # Extrai o nome da tag (ex: v1.2.3)
          TAG=${{ github.ref_name }}
          # Remove o 'v' inicial da tag para ter apenas o número (ex: 1.2.3)
          VERSION=${TAG#v}

          # Define os URLs estáticos para a 'latest' release
          MANIFEST_URL="https://github.com/${{ github.repository }}/releases/latest/download/system.json"
          DOWNLOAD_URL="https://github.com/${{ github.repository }}/releases/latest/download/scion-hero-foundry.zip"

          echo "Nova versão: $VERSION"
          echo "URL do Manifesto: $MANIFEST_URL"
          echo "URL de Download: $DOWNLOAD_URL"

          # Usa a ferramenta 'jq' para atualizar o JSON.
          # Atualiza a versão, o manifesto e o URL de download.
          jq --arg version "$VERSION" --arg manifest "$MANIFEST_URL" --arg download "$DOWNLOAD_URL" \
          '.version = $version | .manifest = $manifest | .download = $download' \
          system.json > system.tmp.json && mv system.tmp.json system.json

      - name: Commit and Push updated system.json
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add system.json
          git commit -m "chore: Update system.json for version ${{ github.ref_name }}"
          git push origin HEAD:main

      - name: Zip the project
        run: |
          # Cria o arquivo zip com o nome fixo "scion-hero-foundry.zip"
          zip -r "scion-hero-foundry.zip" . -x ".git/*" ".github/*"

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v1
        with:
          # Lista dos arquivos a serem enviados para a release.
          # Agora inclui o system.json e o arquivo zip com o novo nome.
          files: |
            scion-hero-foundry.zip
            system.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
